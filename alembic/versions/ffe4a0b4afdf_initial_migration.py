"""Initial migration

Revision ID: ffe4a0b4afdf
Revises: 
Create Date: 2024-08-27 14:10:42.870664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ffe4a0b4afdf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dough_thicknesses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('thickness', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('thickness')
    )
    op.create_index(op.f('ix_dough_thicknesses_id'), 'dough_thicknesses', ['id'], unique=False)
    op.create_table('dough_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dough', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dough')
    )
    op.create_index(op.f('ix_dough_types_id'), 'dough_types', ['id'], unique=False)
    op.create_table('pizza_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_index(op.f('ix_pizza_types_id'), 'pizza_types', ['id'], unique=False)
    op.create_table('pizzas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pizza_name', sa.String(), nullable=True),
    sa.Column('pizza_img', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pizzas_id'), 'pizzas', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('user_city', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('order_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_table('pizza_dough_thickness',
    sa.Column('pizza_id', sa.Integer(), nullable=False),
    sa.Column('dough_thickness_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dough_thickness_id'], ['dough_thicknesses.id'], ),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('pizza_id', 'dough_thickness_id')
    )
    op.create_table('pizza_dough_type',
    sa.Column('pizza_id', sa.Integer(), nullable=False),
    sa.Column('dough_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dough_type_id'], ['dough_types.id'], ),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('pizza_id', 'dough_type_id')
    )
    op.create_table('pizza_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pizza_id', sa.Integer(), nullable=True),
    sa.Column('dough_type_id', sa.Integer(), nullable=True),
    sa.Column('dough_thickness_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['dough_thickness_id'], ['dough_thicknesses.id'], ),
    sa.ForeignKeyConstraint(['dough_type_id'], ['dough_types.id'], ),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pizza_id', 'dough_type_id', 'dough_thickness_id', name='_pizza_price_uc')
    )
    op.create_index(op.f('ix_pizza_prices_id'), 'pizza_prices', ['id'], unique=False)
    op.create_table('pizza_type_pizza',
    sa.Column('pizza_id', sa.Integer(), nullable=False),
    sa.Column('pizza_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ),
    sa.ForeignKeyConstraint(['pizza_type_id'], ['pizza_types.id'], ),
    sa.PrimaryKeyConstraint('pizza_id', 'pizza_type_id')
    )
    op.create_table('user_pizza_cart',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pizza_id', sa.Integer(), nullable=False),
    sa.Column('dough_type_id', sa.Integer(), nullable=False),
    sa.Column('dough_thickness_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dough_thickness_id'], ['dough_thicknesses.id'], ),
    sa.ForeignKeyConstraint(['dough_type_id'], ['dough_types.id'], ),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'pizza_id', 'dough_type_id', 'dough_thickness_id'),
    sa.UniqueConstraint('user_id', 'pizza_id', 'dough_type_id', 'dough_thickness_id', name='_user_pizza_uc')
    )
    op.create_index(op.f('ix_user_pizza_cart_id'), 'user_pizza_cart', ['id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('pizza_id', sa.Integer(), nullable=True),
    sa.Column('dough_type_id', sa.Integer(), nullable=True),
    sa.Column('dough_thickness_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dough_thickness_id'], ['dough_thicknesses.id'], ),
    sa.ForeignKeyConstraint(['dough_type_id'], ['dough_types.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_user_pizza_cart_id'), table_name='user_pizza_cart')
    op.drop_table('user_pizza_cart')
    op.drop_table('pizza_type_pizza')
    op.drop_index(op.f('ix_pizza_prices_id'), table_name='pizza_prices')
    op.drop_table('pizza_prices')
    op.drop_table('pizza_dough_type')
    op.drop_table('pizza_dough_thickness')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_pizzas_id'), table_name='pizzas')
    op.drop_table('pizzas')
    op.drop_index(op.f('ix_pizza_types_id'), table_name='pizza_types')
    op.drop_table('pizza_types')
    op.drop_index(op.f('ix_dough_types_id'), table_name='dough_types')
    op.drop_table('dough_types')
    op.drop_index(op.f('ix_dough_thicknesses_id'), table_name='dough_thicknesses')
    op.drop_table('dough_thicknesses')
    # ### end Alembic commands ###
